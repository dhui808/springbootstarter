<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>springbootstarter</groupId>
	<artifactId>springbootstarter</artifactId>
	<version>0.0.1</version>
	<name>springbootstarter</name>
	<description>Demo project for Spring Boot using start.spring.io</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		
		<dependency>
           <groupId>org.springframework.boot</groupId>
           <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<!-- Remove existing image from local repo -->
							<!-- <execution> <id>docker-clean</id> <phase>install</phase> <goals> 
								<goal>exec</goal> </goals> <configuration> <executable>docker</executable> 
								<workingDirectory>${project.basedir}</workingDirectory> <arguments> <argument>rmi</argument> 
								<argument>${docker.user}/${project.artifactId}</argument> </arguments> </configuration> 
								</execution> -->

							<!-- Create new docker image using Dockerfile which must be present 
								in current working directory. Tag the image using maven project version information. -->
							<execution>
								<id>docker-build</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>build</argument>
										<argument>-t</argument>
										<argument>${docker.user}/${project.artifactId}</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>

							<!-- Login and Push the image to a docker repo. -->
							<execution>
								<id>docker-login</id>
								<phase>deploy</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<workingDirectory>${project.basedir}</workingDirectory>
									<arguments>
										<argument>login</argument>
										<argument>-u</argument>
										<argument>${docker.user}</argument>
										<argument>-p</argument>
										<argument>${docker.password}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>docker-push</id>
								<phase>deploy</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>push</argument>
										<argument>${docker.user}/${project.artifactId}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<!-- Just for satisfying maven-deploy-plugin:2.8.2:deploy . -->
	<distributionManagement>
		<repository>
			<uniqueVersion>false</uniqueVersion>
			<id>test-repo</id>
			<name>Test Repository</name>
			<url>file:///usr/maven/repository</url>
			<layout>default</layout>
		</repository>
	</distributionManagement>
</project>
